2008-04-23 15:56  art

	* [r96]
	  - Index completely removed out of the Unit class
	  - Pipeline class removed since it seems not to be used at all
	  - Processor class does now sorted into the same bin with binnum
	  100, maybe this can be changed in future versions
	  - Small changes to the interface and documentation

2008-04-23 11:25  art

	* [r95]
	  - small doc and interfaces fixes

2008-04-22 22:20  art

	* [r94]
	  - changelog and minor changes

2008-04-22 22:17  art

	* [r93]
	  - sandbox merged with trunk
	  - completly changed the way how Units are managed.
	  - Unit and Processor are now derived from osg::Group which
	  enables to combine them in a graph in an usual fashion
	  - The subgraph under the processor represents the unit pipeline
	  - No State is dierectly involved anymore, the state is acquired
	  automatically during the rendering
	  - Each parent node do provide its output to the children
	  - Each child collects its inputs from all direct parents and
	  hence setup itself in this way
	  - Cycles in the unit graph are allowed, giving the possibility of
	  reusing computed data in the next frames
	  - Cycles are resolved by adding special kind of node
	  BarrierNodes, which disables the traversion at them
	  - Processor uses now a special kind of Visitor to Setup,
	  Initialize, Resolve Cycle, Optimize, Update and Draw the subgraph
	  of units
	  - The .ppu files has not to contain fixed Viewports, allowing
	  reusing of the same .ppu file for different camera resolutions
	  - New UnitTexture unit allowing passing an external texture as
	  input into the ppu graph
	  - Shader uniforms are setted up automatically based on the input
	  textures
	  - The .ppu file can now write and read every kind of Unit
	  including external texture referencies
	  - All examples were updated and changed to the new interface

2008-04-03 17:19  art

	* [r77]
	  - Depth Of Filed example just added, but it does not work at now
	  - inprogress branch directory added. I need this to work on
	  before submitting to the trunk directory

2008-04-03 17:14  art

	* [r76]
	  

2008-03-28 10:16  art

	* [r74]
	  - Small changes to the CMakeLists of the examples, now pthread
	  library is linked only if static build

2008-03-27 13:27  art

	* [r70]
	  - Simple changes in the text unit (there still some strange bugs,
	  however for now it seems to work)
	  - Readme file changed
	  - I am gonna go now to tag a first developer release version

2008-03-05 17:11  art

	* [r69]
	  - Small change in the Unit.h

2008-02-29 19:52  art

	* [r68]
	  - changelog

2008-02-29 19:45  art

	* [r67]
	  - changelog

2008-02-29 19:45  art

	* [r66]
	  - motionblur.ppu added under bin/Data/. Now you can use viewer to
	  check this effect.

2008-02-29 19:23  art

	* [r65]
	  - Unit::getOrCreateOutputTexture() method added. This allows to
	  preallocate the output texture even if the Unit was not
	  initialiyed before.
	  - Unit::addInputPPU does now work intuitively correct. You can
	  now also add input PPUs without initialiying them first.

2008-02-29 16:29  art

	* [r64]
	  - Small bugfixies

2008-02-28 15:14  art

	* [r63]
	  - Units are now executed also if no input was specified
	  - True MRT support added:
	  -- UnitInOut is now capable of rendering to all of its outputs.
	  -- The behaviour was tested by creating an only offline unit
	  pipeline with 3d texture as output and specifying the zoffsets
	  explicitely

2008-02-27 17:38  art

	* [r62]
	  - There was a seg fault if a pipeline containing only offline
	  units were added, this is fixed now.
	  - Some compiler warnings fixed
	  - Small bugfixes

2008-02-25 19:38  art

	* [r61]
	  - Bug with still bounded texture after a PPU run is fixed

2008-02-25 17:38  art

	* [r60]
	  - Just a small change in UnitInOut and UnitText

2008-02-25 17:03  art

	* [r59]
	  - Different changes in the CMakeFiles to support static build of
	  osgPPU
	  - Viewport of the Unit is now not applied directly but through
	  the StateSet
	  - Some small optimizations

2008-01-30 20:48  art

	* [r58]
	  - build.vc8 directory removed, sinc it is not needed for a proper
	  build on windows. Build on windows tested with Visual C++ 2008
	  Express (VC9) and with CMake 2.4

2008-01-30 20:13  art

	* [r57]
	  - CMake listing changed to support osg version as option

2008-01-30 19:23  art

	* [r56]
	  - Non-used makefile removed

2008-01-30 15:08  art

	* [r55]
	  - UnitBypass.cpp added instead of inlined functions in
	  UnitBypass.h

2008-01-29 22:16  art

	* [r54]
	  - just come docs changed

2008-01-29 22:14  art

	* [r53]
	  - just the changelog

2008-01-29 22:13  art

	* [r52]
	  - Very big changes in the interface
	  - UnitInOut has now got the components about mipmapping which
	  were moved from Unit
	  - Unit is now pure abstract base class
	  - UnitBypass added which do nothing as bypass the input to the
	  output
	  - osgdb_ppu plugin changed to support the new unit
	  - .ppu files from bin/Data adapted to the new interface

2008-01-29 19:48  art

	* [r51]
	  - Authors/Contributors list added to the svn. The authors are not
	  sorted in any manner.

2008-01-29 19:33  art

	* [r50]
	  - Licence text in all headers and source files changed
	  - Now the LGPL should be seen everywhere
	  - Readme file get new content about the osgPPU plugin to osg

2008-01-29 19:07  art

	* [r49]
	  - New plugin for reading and writing the ppu pipelines is now
	  activated in the code
	  - New example application "viewer" is actiaved
	  - Viewer allows a simple viewing of pipelines by loading them
	  from files

2008-01-29 16:02  art

	* [r48]
	  - Currently disabling the viewer application because a proper ppu
	  loading system is required

2008-01-29 15:52  art

	* [r47]
	  - CMake FindOSG macro changed a little bit to be able to find osg
	  on non standard installation paths

2008-01-29 15:38  art

	* [r46]
	  - ChangeLog commited

2008-01-29 15:37  art

	* [r45]
	  - osgdb_ppu Plugin added
	  - You are now capable of storing and loading osgPPU pipelines
	  directly from files.
	  - The functionality is under heavy testing, hence it is not
	  activated currently

2008-01-29 15:34  art

	* [r44]
	  - Moved one unit per one source and header file
	  - Cleaned up the code a little bit
	  - Added META_Object for each of the unit
	  - Processor does now check whenever Unit has a valid State
	  associated if not it would be added in the setPipeline method
	  - Shader is now capable of setting up Uniforms directly by giving
	  Uniform* or RefUniformPair into osgPPU::Shader::add method
	  - 3 PPU pipelines as files added (hdr pipeline, simple bypass
	  pipeline and gauss blur pipeline)
	  - Pipelines can be readed from files directly

2008-01-29 15:31  art

	* [r43]
	  - Non-used Makefile removed

2008-01-29 15:30  art

	* [r42]
	  - HDR example moved into own directory
	  - Viewer example moved into "viewer" directory
	  - HDR example now writes its pipeline into Data/hdr.ppu file

2008-01-29 15:28  art

	* [r41]
	  - New example added
	  - Viewer allows to read ppu pipeline from file and test it on an
	  scene graph

2008-01-28 23:20  art

	* [r40]
	  From "Bob Kuhne" :
	  - Changes to the shader code to solve very strict compiler
	  settings

2008-01-23 16:53  art

	* [r39]
	  - Change log replaced and svn up added

2008-01-23 16:38  art

	* [r38]
	  - Small changes in the interface, Units are now not dependent of
	  the Processor
	  - Processor::Pipeline moved out as a stand alone class derived
	  from osg::Object
	  - osgPPU::Pipeline can be written to the files
	  - Writing to files (.ppu) does work properly
	  - Reading of .ppu files is in development
	  - All the reading/writing methods are implemented in the way like
	  osg plugins does, hence simple including into the .osg format is
	  possible
	  - Small changes in the example application, now user sees a
	  texture in the PictureInPicture ppu before switching

2008-01-21 16:42  art

	* [r37]
	  - Started development of osgdb_ppu Plugin to write and read
	  pipeline to/from a file
	  - CMake changes to support new building target (plugin)
	  - Currently this is in development, hence it is disable in the
	  svn
	  
	  

2008-01-21 13:40  art

	* [r36]
	  - Just one script file to create changelogs from the svn

2008-01-21 13:33  art

	* [r35]
	  - Uninstall rule to the CMake system added

2008-01-17 14:27  art

	* [r34]
	  - ChangeLog file added

2008-01-17 13:25  art

	* [r33]
	  Make directory removed

2008-01-17 13:25  art

	* [r32]
	  Couple of old Makefiles removed

2008-01-17 13:24  art

	* [r31]
	  CMake install module added

2008-01-17 13:23  art

	* [r30]
	  From "Stephane Lamoliatte"
	  - CMake build system to support builds on multiple platforms.
	  - CMake configured in the way that this compiles under Windows
	  Visual Studio 8
	  - Bug fix in the PostProcess.cpp which cause segfault on Windows.

2008-01-13 01:06  art

	* [r29]
	  - Naming convention changed
	  - Example application ow runs two times faster

2008-01-11 14:27  art

	* [r28]
	  - CFLAGS changed from -g to -O2, now example runs with around
	  400FPS (cessnafire.osg)

2008-01-11 14:26  art

	* [r27]
	  - Example: FPS-Counter added back, on nVidia GeForce 8800Ultra
	  the run of ./osgppu Data/cessnafire.osg gives around 350FPS

2008-01-11 14:21  art

	* [r26]
	  - Text Wrapper class removed. PPUText is now derived directly
	  from osgText::Text

2008-01-09 18:53  art

	* [r25]
	  - Some hacks commented out for now, maybe commit a patch to osg
	  to support them through StateSets

2008-01-09 15:47  art

	* [r24]
	  - Some bugs and issues with the new driver corrected
	  - In example changed all the occurencies of texture2DLod to
	  texture2D
	  Due to some bugs either in the driver or somewhere else texture2D
	  do not read from the level 0 per default.
	  - Therefor had to add glTexParameteri to change the base level of
	  the texture
	  for input textures in the PPUInOut.cpp
	  - Maybe some patch to osg is required to control this by the
	  stateset
	  
	  - Eye Adaption still do not work as one might expected, however
	  the code is correct now.
	  
	  - I am not sure but better to check if ComputeLuminance
	  mipmapshader does work properly

2008-01-09 00:34  art

	* [r23]
	  - g_MimapLevel changed into float
	  - g_MipmapLevelNum uniform added

2008-01-09 00:32  art

	* [r22]
	  - Bugfixes with the new nVidia driver 167.07 corrected
	  - Shader source for the example application corrected to support
	  Shader Model 3.0
	  - Structure of the example ppus changed. Now there is two offline
	  ppus which
	  do compute the adapted luminance value.
	  
	  - TODO: Adapted luminance value seems to have some problems. Will
	  be corrected soon.

2008-01-08 14:37  art

	* [r21]
	  - Small changes to the readme file

2008-01-07 15:53  art

	* [r20]
	  - Hack with unbounded textures is solved
	  - Shaders and ppus seems to work now fine, my another application
	  (refEiko), works now also fine with osgPPU
	  - example application slightly changed

2008-01-07 13:00  art

	* [r19]
	  - small changes in the example application
	  - small changes in the interface of PostProcess and
	  PostProcessUnit
	  - small addings in the documentation
	  - footer.html added to generate doxygen documentation

2008-01-07 11:25  art

	* [r18]
	  - Documentation changes

2008-01-07 11:10  art

	* [r17]
	  - UniformMap type removed from PostProcessUnit
	  - META_Object() get an semicolon afterwars, so that doxygen is
	  able to parse

2008-01-07 11:05  art

	* [r16]
	  - Documentation changed
	  - A lot of methods were inlined
	  - Some slightly changes in the interface

2008-01-07 09:52  art

	* [r15]
	  - example: Setup material of teapot instead of direct call of
	  glColor

2008-01-07 09:48  art

	* [r14]
	  - PPUInOut.cpp g_TextureWidth and g_TextureHeight changed into
	  g_ViewportWidth and g_ViewportHeight
	  - example shaders changed from Shader Model 4 to Shader Model 3,
	  exampel application should now also work on GeForce 6xxx
	  - example: Teapot as default model added

2008-01-07 00:39  art

	* [r13]
	  - Documentaion through doxygen added
	  - Licence header changed
	  - Small bugfixes
	  - Example application includes some more features

2008-01-06 19:04  art

	* [r12]
	  - osgppu Example is now almost complete. It shows how to use
	  osgPPU to setup
	  a proper HDR rendering pipeline
	  
	  - some minor bugfixes in PPUs
	  
	  - There are still some problems with ppu which do use textures
	  and shader
	  Textures has to be bound manually by hand, stateset semms not to
	  settted up properly

2008-01-05 00:35  art

	* [r11]
	  - Example application created
	  - some changes in the PPUText done
	  - PostProcess can now be used in the osg graph by specifying the
	  camera drawcallback method
	  - some bugfixes

2008-01-04 12:14  art

	* [r10]
	  problems with blending corrected
	  PPUText were added
	  Text class as wrapper was also added

2008-01-03 16:16  art

	* [r9]
	  Shader class included
	  errors were corrected
	  all things works fine for now
	  there are still some problems with blending of ppu's

2007-12-21 13:52  art

	* [r8]
	  

2007-12-20 17:13  art

	* [r7]
	  

2007-12-19 18:06  art

	* [r6]
	  

2007-12-19 10:43  art

	* [r5]
	  CMake removed
	  Simple Makefiles added
	  Now you are able to make, install and uninstall gracefully

2007-12-18 15:07  art

	* [r4]
	  

2007-12-18 13:11  art

	* [r3]
	  

2007-12-18 13:08  art

	* [r2]
	  

2007-12-18 13:07  art

	* [r1]
	  

